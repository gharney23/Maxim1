@keyframes enlarge {
    0% {
        transform: scale(.01);
    }

    50% {
        transform: scale(6);
    }

    100% {
        transform: scale(.01);
    }
}
@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}
body {
    background-color: black;
}


/* These are styles for the new class 'container' I put in your HTML. We're using containers to deal with positioning so that your circle and your image don't have to worry about being in the right place as they're shifting with the animations. Notice how these styles combine positioning (fixed) with flexbox.  The fixed positioning responds to the window, so it'll center itself in the viewport, while flexbox is used to center the child items (your circle and image) inside of that.  */
.container {
    /* we'll cover fixed positioning in class on Tuesday */
    position: fixed;

    /* this is a trick with relative, absolute, and fixed positioning to center something horizontally and vertically */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    /* moving the z-index here to get the containers to sit on top of the body, and everything in the containers will follow that rule */
    z-index: 1;

    /* using vh, or 'viewport height' as unit to respond to window size. because you're working with squares (technically circles that fit in squares, but remember the browser sees everything as some type of rectangle!), you need both the height and width to be the same. by making the height 100vh, the size of this div will always fit in  the viewport height-wise, and the width can follow that size. */
    height: 100vh;
    width: 100vh;

    /* flexbox stuff for centering content within the container */
    display: flex;
    align-items: center;
    justify-content: center;
}

#circle {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: white;
    animation-name: enlarge;
    animation-duration: 12s;
    animation-iteration-count: infinite;
    overflow: hidden;
}
img {
    width: 100%;
    animation-name: rotate;
    animation-duration: 12s;
    animation-iteration-count:infinite;
}


